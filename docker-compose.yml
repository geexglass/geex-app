services:
  app:
    build:
      dockerfile: nextjs-app/Dockerfile
      args:
        SANITY_PROJECT_ID: ${SANITY_PROJECT_ID}
        SANITY_DATASET: ${SANITY_DATASET}
        SANITY_API_READ_TOKEN: ${SANITY_API_READ_TOKEN}
    environment:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${SANITY_PROJECT_ID}
      NEXT_PUBLIC_SANITY_DATASET: ${SANITY_DATASET}
      SANITY_API_READ_TOKEN: ${SANITY_API_READ_TOKEN}
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - app-db

  app-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - app-db

  studio:
    build:
      dockerfile: studio/Dockerfile
      args:
        SANITY_PROJECT_ID: ${SANITY_PROJECT_ID}
        SANITY_DATASET: ${SANITY_DATASET}
        SANITY_STUDIO_PREVIEW_URL: ${SANITY_STUDIO_PREVIEW_URL}
    ports:
      - "3333:80"
    restart: unless-stopped

volumes:
  app-db-data:
  pgadmin-data: